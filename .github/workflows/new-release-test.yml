name: Testing edited release events

on:
  release:
    types: [edited]

jobs:
  release-type:
    runs-on: ubuntu-latest
    outputs:
      language: ${{ steps.validate-release.outputs.lang }}
      version: ${{ steps.validate-release.outputs.version }}
    steps:
      -
        id: log-type
        name: Log Type
        run: |
          echo "Event: ${{ github.event.action }}"

      -
        id: validate-release
        name: Update Prerelease 
        uses: actions/github-script@v7
        env:
          RELEASE_NAME: ${{ github.event.release.name }}
        with:
          script: |
            const re = /^(?<lang>\w*)-sdk-v(?<version>\d+\.\d+\.\d+)$/ 
            const releaseName = process.env.RELEASE_NAME ?? '';
            const match = releaseName.match(re);

            if (match === null) {
              core.setFailed(`Invalid release name: ${releaseName}`);
              return;
            }

            core.setOutput("lang", match.groups.lang);
            core.setOutput("version", match.groups.version);

  kotlin-publish:
    runs-on: ubuntu-latest
    needs: release-type
    if: needs.release-type.outputs.language == 'kotlin'
    steps:
      - id: log-kotlin
        run: |
          echo "KOTLIN PUBLISH: ${{ needs.release-type.outputs.version }}"

  typescript-publish:
    runs-on: ubuntu-latest
    needs: release-type
    if: needs.release-type.outputs.language == 'typescript'
    steps:
      - id: log-typescript
        run: |
          echo "TYPESCRIPT PUBLISH: ${{ needs.release-type.outputs.version }}"
