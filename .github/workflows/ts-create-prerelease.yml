name: Create TS Prerelease

on:
  push:
    branches:
      - main
    paths:
      - 'ts-proj/**'
      - '.github/workflows/ts-create-prerelease.yml'

permissions:
  contents: write

jobs:
  do-thing:
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.name "Cole Voss"
          git config user.email "voss.cole@gmail.com"
          # git config user.name "bwell-dev"
          # git config user.email "bwell-dev@icanbwell.com"

      - id: generate-tag
        name: Generate Tag
        run: |
          CURRENT_VERSION=$(cat ./ts-proj/package.json | jq -r .version)
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> "$GITHUB_OUTPUT"
          NEW_TAG=ts-v$CURRENT_VERSION-rc.$(git show --no-patch --format=%ct)
          echo "NEW_TAG=$NEW_TAG" >> "$GITHUB_OUTPUT"

      - name: Get last tag
        id: get-prev-tag
        env:
          CURRENT_VERSION: ${{ steps.generate-tag.outputs.CURRENT_VERSION }}
        run: |
          PREV_TAG=$(git for-each-ref refs/tags --sort=-taggerdate --format='%(refname)' | grep "ts-v$CURRENT_VERSION-rc\." | head -n 1)
          echo "PREV_TAG=${PREV_TAG#"refs/tags/"}" >> "$GITHUB_OUTPUT"

      - name: Get last tag
        id: get-prev-tag
        env:
          NEW_TAG: ${{ steps.generate-tag.outputs.NEW_TAG }}
        run: |
          git tag -a $NEW_TAG -m "$NEW_TAG RC"
          git push origin --tags


      - id: tag-current 
        name: Tag Current Commit
        env:
          CURRENT_VERSION: ${{ steps.generate-tag.outputs.CURRENT_VERSION }}
          NEW_TAG: ${{ steps.generate-tag.outputs.NEW_TAG }}
          PREV_TAG: ${{ steps.get-prev-tag.outputs.PREV_TAG }}

        run: |
          echo "CURRENT_VERSION: $CURRENT_VERSION"
          echo "NEW_TAG:         $NEW_TAG"
          echo "PREV_TAG:        $PREV_TAG"

